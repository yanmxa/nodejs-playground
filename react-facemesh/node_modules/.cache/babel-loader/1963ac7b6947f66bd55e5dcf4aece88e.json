{"ast":null,"code":"// Triangulation metrics\nexport const TRIANGULATION = []; // Draw triangle\n\nconst drawPath = (ctx, points, closePath) => {\n  const region = new Path2D();\n  region.moveTo(points[0][0], points[0][1]);\n\n  for (let i = 1; i < points.length; i++) {}\n}; // Draw the points\n\n\nexport const drawMesh = (preditions, ctx) => {\n  if (preditions.length > 0) {\n    preditions.forEach(predition => {\n      const keypoints = predition.scaledMesh;\n\n      for (let i = 0; i < keypoints.length; i++) {\n        const x = keypoints[i][0];\n        const y = keypoints[i][1];\n        ctx.beginPath();\n        ctx.arc(x, y, 1, 0, 3 * Math.PI);\n        ctx.fillStyle = \"aqua\";\n        ctx.fill();\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/yanmeng/workspace/react/react-tensorflow/src/utilities.js"],"names":["TRIANGULATION","drawPath","ctx","points","closePath","region","Path2D","moveTo","i","length","drawMesh","preditions","forEach","predition","keypoints","scaledMesh","x","y","beginPath","arc","Math","PI","fillStyle","fill"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,EAAtB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,SAAd,KAA4B;AACzC,QAAMC,MAAM,GAAG,IAAIC,MAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,MAAP,CAAcJ,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAd,EAA4BA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAA5B;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC,CAEvC;AAEJ,CAPD,C,CASA;;;AACA,OAAO,MAAME,QAAQ,GAAG,CAACC,UAAD,EAAaT,GAAb,KAAqB;AAC3C,MAAIS,UAAU,CAACF,MAAX,GAAoB,CAAxB,EAA2B;AACzBE,IAAAA,UAAU,CAACC,OAAX,CAAoBC,SAAD,IAAe;AAChC,YAAMC,SAAS,GAAGD,SAAS,CAACE,UAA5B;;AACA,WAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,SAAS,CAACL,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,cAAMQ,CAAC,GAAGF,SAAS,CAACN,CAAD,CAAT,CAAa,CAAb,CAAV;AACA,cAAMS,CAAC,GAAGH,SAAS,CAACN,CAAD,CAAT,CAAa,CAAb,CAAV;AACAN,QAAAA,GAAG,CAACgB,SAAJ;AACAhB,QAAAA,GAAG,CAACiB,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,IAAIG,IAAI,CAACC,EAA7B;AACAnB,QAAAA,GAAG,CAACoB,SAAJ,GAAgB,MAAhB;AACApB,QAAAA,GAAG,CAACqB,IAAJ;AACD;AACF,KAVD;AAWD;AACF,CAdM","sourcesContent":["// Triangulation metrics\nexport const TRIANGULATION = [];\n\n// Draw triangle\nconst drawPath = (ctx, points, closePath) => {\n    const region = new Path2D()\n    region.moveTo(points[0][0], points[0][1])\n    for (let i = 1; i < points.length; i++) {\n        \n    }\n\n}\n\n// Draw the points\nexport const drawMesh = (preditions, ctx) => {\n  if (preditions.length > 0) {\n    preditions.forEach((predition) => {\n      const keypoints = predition.scaledMesh;\n      for (let i = 0; i < keypoints.length; i++) {\n        const x = keypoints[i][0];\n        const y = keypoints[i][1];\n        ctx.beginPath();\n        ctx.arc(x, y, 1, 0, 3 * Math.PI);\n        ctx.fillStyle = \"aqua\";\n        ctx.fill();\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}